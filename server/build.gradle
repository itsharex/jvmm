ext.projectName = 'jvmm-server'
archivesBaseName = "jvmm-server"

group = rootProject.group
version = rootProject.version

dependencies {
    compile(project(':core'))
    compile(project(':convey'))
    compile(project(':logger'))
    compileOnly("org.slf4j:slf4j-log4j12:${slf4jVersion}")
    compileOnly("org.slf4j:slf4j-jdk14:${slf4jVersion}")
    compileOnly("ch.qos.logback:logback-core:${logbackVersion}") {
        exclude group: "org.slf4j"
    }
    compileOnly("ch.qos.logback:logback-classic:${logbackVersion}") {
        exclude group: "org.slf4j"
    }
    compile "org.yaml:snakeyaml:${snakeyamlVersion}"
}

jar {
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'

    archiveName("jvmm-server.jar")

    manifest {
        attributes 'Main-Class': 'org.beifengtz.jvmm.server.ServerApplication'
    }

    //  发布时去掉
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    doLast {
        def targetDir = "${rootProject.rootDir}/bin/jvmm-${rootProject.version}"

        copy {
            println("copy config.yml to ${targetDir}")

            from "${project.buildDir}/resources/main/config.yml"
            into targetDir
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    getArchiveClassifier().set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    getArchiveClassifier().set('javadoc')
}

javadoc {
    options.addStringOption("charset", "UTF-8")
}
